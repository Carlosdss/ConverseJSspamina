{"version":3,"sources":["../src/converse-inverse.js"],"names":["root","factory","define","converse","tpl_brand_heading","env","Strophe","_","createBrandHeadingElement","div","document","createElement","innerHTML","firstChild","isMessageToHiddenChat","_converse","message","jid","getBareJidFromJid","getAttribute","model","chatboxes","get","isNil","plugins","add","overrides","areDesktopNotificationsEnabled","__super__","call","shouldNotifyOfMessage","result","apply","arguments","ControlBoxView","renderContactsPanel","el","classList","remove","renderRegistrationPanel","allow_registration","getElementById","parentNode","insertBefore","renderLoginPanel","ChatRoomView","afterShown","focus","scrollDown","initialize","api","settings","update","chatview_avatar_height","chatview_avatar_width","hide_open_bookmarks","show_controlbox_by_default","sticky_controlbox"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,WAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AACtBC,WAAO,CAAC,eAAD,EACC,mBADD,EAEC,mBAFD,EAGC,qBAHD,EAIC,cAJD,EAKC,oBALD,CAAP,EAMGD,OANH;AAOH,CARA,aAQO,UAAUE,QAAV,EAAoBC,iBAApB,EAAuC;AAC3C;;AAD2C,wBAEpBD,SAASE,GAFW;AAAA,QAEnCC,OAFmC,iBAEnCA,OAFmC;AAAA,QAE1BC,CAF0B,iBAE1BA,CAF0B;;;AAI3C,aAASC,yBAAT,GAAsC;AAClC,YAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;AACAF,YAAIG,SAAJ,GAAgBR,mBAAhB;AACA,eAAOK,IAAII,UAAX;AACH;;AAEA,aAASC,qBAAT,CAAgCC,SAAhC,EAA2CC,OAA3C,EAAoD;AACjD,YAAMC,MAAMX,QAAQY,iBAAR,CAA0BF,QAAQG,YAAR,CAAqB,MAArB,CAA1B,CAAZ;AACA,YAAMC,QAAQL,UAAUM,SAAV,CAAoBC,GAApB,CAAwBL,GAAxB,CAAd;AACA,YAAI,CAACV,EAAEgB,KAAF,CAAQH,KAAR,CAAL,EAAqB;AACjB,mBAAOA,MAAME,GAAN,CAAU,QAAV,CAAP;AACH;AACD;AACA;AACA,eAAO,IAAP;AACH;;AAEDnB,aAASqB,OAAT,CAAiBC,GAAjB,CAAqB,kBAArB,EAAyC;;AAErCC,mBAAW;AACP;AACA;AACA;AACA;AACA;;AAEAC,0CAPO,4CAO2B;AAC9B;AACA;AACA,uBAAO,KAAKC,SAAL,CAAeD,8BAAf,CAA8CE,IAA9C,CAAmD,IAAnD,EAAyD,IAAzD,CAAP;AACH,aAXM;AAaPC,iCAbO,iCAagBd,OAbhB,EAayB;AAAA,oBACpBD,SADoB,GACN,KAAKa,SADC,CACpBb,SADoB;;AAE5B,oBAAMgB,SAAS,KAAKH,SAAL,CAAeE,qBAAf,CAAqCE,KAArC,CAA2C,IAA3C,EAAiDC,SAAjD,CAAf;AACA,uBAAOF,UAAUjB,sBAAsBC,SAAtB,EAAiCC,OAAjC,CAAjB;AACH,aAjBM;;;AAmBPkB,4BAAgB;AACZC,mCADY,iCACW;AACnB,yBAAKP,SAAL,CAAeO,mBAAf,CAAmCH,KAAnC,CAAyC,IAAzC,EAA+CC,SAA/C;AACA,yBAAKG,EAAL,CAAQC,SAAR,CAAkBC,MAAlB,CAAyB,YAAzB;AACA,2BAAO,IAAP;AACH,iBALW;AAOZC,uCAPY,qCAOe;AACvB,yBAAKX,SAAL,CAAeW,uBAAf,CAAuCP,KAAvC,CAA6C,IAA7C,EAAmDC,SAAnD;AACA,wBAAI,KAAKL,SAAL,CAAeb,SAAf,CAAyByB,kBAA7B,EAAiD;AAC7C,4BAAMJ,KAAK1B,SAAS+B,cAAT,CAAwB,mBAAxB,CAAX;AACAL,2BAAGM,UAAH,CAAcC,YAAd,CAA2BnC,2BAA3B,EAAwD4B,EAAxD;AACH;AACD,2BAAO,IAAP;AACH,iBAdW;AAgBZQ,gCAhBY,8BAgBQ;AAChB,yBAAKhB,SAAL,CAAegB,gBAAf,CAAgCZ,KAAhC,CAAsC,IAAtC,EAA4CC,SAA5C;AACA,yBAAKG,EAAL,CAAQC,SAAR,CAAkBZ,GAAlB,CAAsB,YAAtB;AACA,wBAAMW,KAAK1B,SAAS+B,cAAT,CAAwB,gBAAxB,CAAX;AACAL,uBAAGM,UAAH,CAAcC,YAAd,CAA2BnC,2BAA3B,EAAwD4B,EAAxD;AACA,2BAAO,IAAP;AACH;AAtBW,aAnBT;;AA4CPS,0BAAc;AACVC,0BADU,sBACEC,KADF,EACS;AACf;;AAEA,yBAAKC,UAAL;AACA,wBAAID,KAAJ,EAAW;AACP,6BAAKA,KAAL;AACH;AACD,2BAAO,KAAKnB,SAAL,CAAekB,UAAf,CAA0Bd,KAA1B,CAAgC,IAAhC,EAAsCC,SAAtC,CAAP;AACH;AATS;AA5CP,SAF0B;;AA2DrCgB,kBA3DqC,wBA2DvB;AACV,iBAAKlC,SAAL,CAAemC,GAAf,CAAmBC,QAAnB,CAA4BC,MAA5B,CAAmC;AAC/BC,wCAAwB,EADO;AAE/BC,uCAAuB,EAFQ;AAG/BC,qCAAqB,IAHU;AAI/BC,4CAA4B,IAJG;AAK/BC,mCAAmB;AALY,aAAnC;AAOH;AAnEoC,KAAzC;AAqEH,CAlGA,CAAD","file":"converse-inverse.js","sourcesContent":["// Converse.js (A browser based XMPP chat client)\n// http://conversejs.org\n//\n// Copyright (c) JC Brand <jc@opkode.com>\n// Licensed under the Mozilla Public License (MPLv2)\n//\n/*global define */\n\n(function (root, factory) {\n    define([\"converse-core\",\n            \"tpl!brand_heading\",\n            \"converse-chatview\",\n            \"converse-controlbox\",\n            \"converse-muc\",\n            \"converse-singleton\"\n    ], factory);\n}(this, function (converse, tpl_brand_heading) {\n    \"use strict\";\n    const { Strophe, _ } = converse.env;\n\n    function createBrandHeadingElement () {\n        const div = document.createElement('div');\n        div.innerHTML = tpl_brand_heading();\n        return div.firstChild;\n    }\n\n     function isMessageToHiddenChat (_converse, message) {\n        const jid = Strophe.getBareJidFromJid(message.getAttribute('from'));\n        const model = _converse.chatboxes.get(jid);\n        if (!_.isNil(model)) {\n            return model.get('hidden');\n        }\n        // Not having a chat box is assume to be practically the same\n        // as it being hidden.\n        return true;\n    }\n\n    converse.plugins.add('converse-inverse', {\n\n        overrides: {\n            // overrides mentioned here will be picked up by converse.js's\n            // plugin architecture they will replace existing methods on the\n            // relevant objects or classes.\n            //\n            // new functions which don't exist yet can also be added.\n\n            areDesktopNotificationsEnabled () {\n                // Call with \"ignore_hidden\" as true, so that it doesn't check\n                // if the windowState is hidden.\n                return this.__super__.areDesktopNotificationsEnabled.call(this, true);\n            },\n\n            shouldNotifyOfMessage (message) {\n                const { _converse } = this.__super__;\n                const result = this.__super__.shouldNotifyOfMessage.apply(this, arguments);\n                return result && isMessageToHiddenChat(_converse, message);\n            },\n\n            ControlBoxView: {\n                renderContactsPanel () {\n                    this.__super__.renderContactsPanel.apply(this, arguments);\n                    this.el.classList.remove(\"fullscreen\");\n                    return this;\n                },\n\n                renderRegistrationPanel () {\n                    this.__super__.renderRegistrationPanel.apply(this, arguments);\n                    if (this.__super__._converse.allow_registration) {\n                        const el = document.getElementById('converse-register');\n                        el.parentNode.insertBefore(createBrandHeadingElement(), el);\n                    }\n                    return this;\n                },\n\n                renderLoginPanel () {\n                    this.__super__.renderLoginPanel.apply(this, arguments);\n                    this.el.classList.add(\"fullscreen\");\n                    const el = document.getElementById('converse-login');\n                    el.parentNode.insertBefore(createBrandHeadingElement(), el);\n                    return this;\n                }\n            },\n\n            ChatRoomView: {\n                afterShown (focus) {\n                    /* Make sure chat rooms are scrolled down when opened\n                     */\n                    this.scrollDown();\n                    if (focus) {\n                        this.focus();\n                    }\n                    return this.__super__.afterShown.apply(this, arguments);\n                }\n            }\n        },\n\n        initialize () {\n            this._converse.api.settings.update({\n                chatview_avatar_height: 44,\n                chatview_avatar_width: 44,\n                hide_open_bookmarks: true,\n                show_controlbox_by_default: true,\n                sticky_controlbox: true,\n            });\n        }\n    });\n}));\n"]}