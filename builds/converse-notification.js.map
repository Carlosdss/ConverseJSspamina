{"version":3,"sources":["../src/converse-notification.js"],"names":["root","factory","define","converse","env","utils","Strophe","_","plugins","add","initialize","_converse","__","___","supports_html5_notification","window","api","settings","update","notify_all_room_messages","show_desktop_notifications","show_chatstate_notifications","chatstate_notification_blacklist","play_sounds","sounds_path","notification_icon","isOnlyChatStateNotification","msg","isNull","querySelector","ACTIVE","COMPOSING","INACTIVE","PAUSED","GONE","shouldNotifyOfGroupMessage","message","notify_all","jid","getAttribute","resource","getResourceFromJid","room_jid","getBareJidFromJid","sender","unescapeNode","querySelectorAll","length","room","chatboxes","get","body","mentioned","RegExp","test","textContent","isArray","includes","shouldNotifyOfMessage","isOTRMessage","forwarded","isHeadlineMessage","is_me","bare_jid","playSoundNotification","audio","isUndefined","Audio","canPlayType","play","areDesktopNotificationsEnabled","ignore_hidden","enabled","Notification","permission","windowState","showMessageNotification","title","roster_item","full_from_jid","from_jid","allow_non_roster_messaging","roster","log","LogLevel","ERROR","n","lang","locale","icon","setTimeout","close","bind","showChatStateNotification","contact","chat_state","chat_status","fullname","showContactRequestNotification","showFeedbackNotification","data","klass","subject","handleChatStateNotification","handleMessageNotification","stanza","handleContactRequestNotification","handleFeedback","requestPermission","on"],"mappings":"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","file":"converse-notification.js","sourcesContent":["// Converse.js (A browser based XMPP chat client)\n// http://conversejs.org\n//\n// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>\n// Licensed under the Mozilla Public License (MPLv2)\n//\n/*global define */\n\n(function (root, factory) {\n    define([\"converse-core\"], factory);\n}(this, function (converse) {\n    \"use strict\";\n    const { utils, Strophe, _ } = converse.env;\n\n    converse.plugins.add('converse-notification', {\n\n        initialize () {\n            /* The initialize function gets called as soon as the plugin is\n             * loaded by converse.js's plugin machinery.\n             */\n            const { _converse } = this;\n\n            // For translations\n            const { __ } = _converse;\n            const { ___ } = _converse;\n\n            _converse.supports_html5_notification = \"Notification\" in window;\n\n            _converse.api.settings.update({\n                notify_all_room_messages: false,\n                show_desktop_notifications: true,\n                show_chatstate_notifications: false,\n                chatstate_notification_blacklist: [],\n                // ^ a list of JIDs to ignore concerning chat state notifications\n                play_sounds: true,\n                sounds_path: '/sounds/',\n                notification_icon: '/logo/conversejs128.png'\n            });\n\n            _converse.isOnlyChatStateNotification = (msg) =>\n                // See XEP-0085 Chat State Notification\n                _.isNull(msg.querySelector('body')) && (\n                        _.isNull(msg.querySelector(_converse.ACTIVE)) ||\n                        _.isNull(msg.querySelector(_converse.COMPOSING)) ||\n                        _.isNull(msg.querySelector(_converse.INACTIVE)) ||\n                        _.isNull(msg.querySelector(_converse.PAUSED)) ||\n                        _.isNull(msg.querySelector(_converse.GONE))\n                    )\n            ;\n\n            _converse.shouldNotifyOfGroupMessage = function (message) {\n                /* Is this a group message worthy of notification?\n                 */\n                let notify_all = _converse.notify_all_room_messages;\n                const jid = message.getAttribute('from'),\n                    resource = Strophe.getResourceFromJid(jid),\n                    room_jid = Strophe.getBareJidFromJid(jid),\n                    sender = resource && Strophe.unescapeNode(resource) || '';\n                if (sender === '' || message.querySelectorAll('delay').length > 0) {\n                    return false;\n                }\n                const room = _converse.chatboxes.get(room_jid);\n                const body = message.querySelector('body');\n                if (_.isNull(body)) {\n                    return false;\n                }\n                const mentioned = (new RegExp(`\\\\b${room.get('nick')}\\\\b`)).test(body.textContent);\n                notify_all = notify_all === true ||\n                    (_.isArray(notify_all) && _.includes(notify_all, room_jid));\n                if (sender === room.get('nick') || (!notify_all && !mentioned)) {\n                    return false;\n                }\n                return true;\n            };\n\n            _converse.shouldNotifyOfMessage = function (message) {\n                /* Is this a message worthy of notification?\n                 */\n                if (utils.isOTRMessage(message)) {\n                    return false;\n                }\n                const forwarded = message.querySelector('forwarded');\n                if (!_.isNull(forwarded)) {\n                    return false;\n                } else if (message.getAttribute('type') === 'groupchat') {\n                    return _converse.shouldNotifyOfGroupMessage(message);\n                } else if (utils.isHeadlineMessage(message)) {\n                    // We want to show notifications for headline messages.\n                    return true;\n                }\n                const is_me = Strophe.getBareJidFromJid(\n                        message.getAttribute('from')) === _converse.bare_jid;\n                return !_converse.isOnlyChatStateNotification(message) && !is_me;\n            };\n\n            _converse.playSoundNotification = function () {\n                /* Plays a sound to notify that a new message was recieved.\n                 */\n                // XXX Eventually this can be refactored to use Notification's sound\n                // feature, but no browser currently supports it.\n                // https://developer.mozilla.org/en-US/docs/Web/API/notification/sound\n                let audio;\n                if (_converse.play_sounds && !_.isUndefined(window.Audio)) {\n                    audio = new Audio(_converse.sounds_path+\"msg_received.ogg\");\n                    if (audio.canPlayType('/audio/ogg')) {\n                        audio.play();\n                    } else {\n                        audio = new Audio(_converse.sounds_path+\"msg_received.mp3\");\n                        audio.play();\n                    }\n                }\n            };\n\n            _converse.areDesktopNotificationsEnabled = function (ignore_hidden) {\n                const enabled = _converse.supports_html5_notification &&\n                    _converse.show_desktop_notifications &&\n                    Notification.permission === \"granted\";\n                if (ignore_hidden) {\n                    return enabled;\n                } else {\n                    return enabled && _converse.windowState === 'hidden';\n                }\n            };\n\n            _converse.showMessageNotification = function (message) {\n                /* Shows an HTML5 Notification to indicate that a new chat\n                 * message was received.\n                 */\n                let title, roster_item;\n                const full_from_jid = message.getAttribute('from'),\n                      from_jid = Strophe.getBareJidFromJid(full_from_jid);\n                if (message.getAttribute('type') === 'headline') {\n                    if (!_.includes(from_jid, '@') || _converse.allow_non_roster_messaging) {\n                        title = __(___(\"Notification from %1$s\"), from_jid);\n                    } else {\n                        return;\n                    }\n                } else if (!_.includes(from_jid, '@')) {\n                    // XXX: workaround for Prosody which doesn't give type \"headline\"\n                    title = __(___(\"Notification from %1$s\"), from_jid);\n                } else if (message.getAttribute('type') === 'groupchat') {\n                    title = __(___(\"%1$s says\"), Strophe.getResourceFromJid(full_from_jid));\n                } else {\n                    if (_.isUndefined(_converse.roster)) {\n                        _converse.log(\n                            \"Could not send notification, because roster is undefined\",\n                            Strophe.LogLevel.ERROR);\n                        return;\n                    }\n                    roster_item = _converse.roster.get(from_jid);\n                    if (!_.isUndefined(roster_item)) {\n                        title = __(___(\"%1$s says\"), roster_item.get('fullname'));\n                    } else {\n                        if (_converse.allow_non_roster_messaging) {\n                            title = __(___(\"%1$s says\"), from_jid);\n                        } else {\n                            return;\n                        }\n                    }\n                }\n                const n = new Notification(title, {\n                        body: message.querySelector('body').textContent,\n                        lang: _converse.locale,\n                        icon: _converse.notification_icon\n                    });\n                setTimeout(n.close.bind(n), 5000);\n            };\n\n            _converse.showChatStateNotification = function (contact) {\n                /* Creates an HTML5 Notification to inform of a change in a\n                 * contact's chat state.\n                 */\n                if (_.includes(_converse.chatstate_notification_blacklist, contact.jid)) {\n                    // Don't notify if the user is being ignored.\n                    return;\n                }\n                const chat_state = contact.chat_status;\n                let message = null;\n                if (chat_state === 'offline') {\n                    message = __('has gone offline');\n                } else if (chat_state === 'away') {\n                    message = __('has gone away');\n                } else if ((chat_state === 'dnd')) {\n                    message = __('is busy');\n                } else if (chat_state === 'online') {\n                    message = __('has come online');\n                }\n                if (message === null) {\n                    return;\n                }\n                const n = new Notification(contact.fullname, {\n                        body: message,\n                        lang: _converse.locale,\n                        icon: _converse.notification_icon\n                    });\n                setTimeout(n.close.bind(n), 5000);\n            };\n\n            _converse.showContactRequestNotification = function (contact) {\n                const n = new Notification(contact.fullname, {\n                        body: __('wants to be your contact'),\n                        lang: _converse.locale,\n                        icon: _converse.notification_icon\n                    });\n                setTimeout(n.close.bind(n), 5000);\n            };\n\n            _converse.showFeedbackNotification = function (data) {\n                if (data.klass === 'error' || data.klass === 'warn') {\n                    const n = new Notification(data.subject, {\n                            body: data.message,\n                            lang: _converse.locale,\n                            icon: _converse.notification_icon\n                        });\n                    setTimeout(n.close.bind(n), 5000);\n                }\n            };\n\n            _converse.handleChatStateNotification = function (contact) {\n                /* Event handler for on('contactStatusChanged').\n                 * Will show an HTML5 notification to indicate that the chat\n                 * status has changed.\n                 */\n                if (_converse.areDesktopNotificationsEnabled() &&\n                        _converse.show_chatstate_notifications) {\n                    _converse.showChatStateNotification(contact);\n                }\n            };\n\n            _converse.handleMessageNotification = function (data) {\n                /* Event handler for the on('message') event. Will call methods\n                 * to play sounds and show HTML5 notifications.\n                 */\n                const message = data.stanza;\n                if (!_converse.shouldNotifyOfMessage(message)) {\n                    return false;\n                }\n                _converse.playSoundNotification();\n                if (_converse.areDesktopNotificationsEnabled()) {\n                    _converse.showMessageNotification(message);\n                }\n            };\n\n            _converse.handleContactRequestNotification = function (contact) {\n                if (_converse.areDesktopNotificationsEnabled(true)) {\n                    _converse.showContactRequestNotification(contact);\n                }\n            };\n\n            _converse.handleFeedback = function (data) {\n                if (_converse.areDesktopNotificationsEnabled(true)) {\n                    _converse.showFeedbackNotification(data);\n                }\n            };\n\n            _converse.requestPermission = function () {\n                if (_converse.supports_html5_notification &&\n                    ! _.includes(['denied', 'granted'], Notification.permission)) {\n                    // Ask user to enable HTML5 notifications\n                    Notification.requestPermission();\n                }\n            };\n\n            _converse.on('pluginsInitialized', function () {\n                // We only register event handlers after all plugins are\n                // registered, because other plugins might override some of our\n                // handlers.\n                _converse.on('contactRequest',  _converse.handleContactRequestNotification);\n                _converse.on('contactStatusChanged',  _converse.handleChatStateNotification);\n                _converse.on('message',  _converse.handleMessageNotification);\n                _converse.on('feedback', _converse.handleFeedback);\n                _converse.on('connected', _converse.requestPermission);\n            });\n        }\n    });\n}));\n"]}