{"version":3,"sources":["../src/converse-roomslist.js"],"names":["root","factory","define","utils","converse","muc","tpl_rooms_list","tpl_rooms_list_item","env","Backbone","Promise","b64_sha1","sizzle","_","plugins","add","optional_dependencies","initialize","_converse","__","___","RoomsList","Model","extend","defaults","OPENED","RoomsListView","View","tagName","className","events","toggleRoomsList","debounce","model","on","renderRoomsListElement","removeRoomsListElement","cachekey","bare_jid","list_model","id","browserStorage","BrowserStorage","storage","fetch","render","el","innerHTML","get","hide","querySelector","classList","each","bind","controlboxview","chatboxviews","isUndefined","document","body","contains","container","isNull","insertBefore","firstChild","show","remove","closeRoom","ev","preventDefault","name","target","getAttribute","jid","confirm","leave","item","bookmark","head","bookmarksview","where","div","createElement","toJSON","allow_bookmarks","appendChild","removeBookmark","removeBookmarkViaEvent","addBookmark","addBookmarkViaEvent","list_el","removeChild","childElementCount","slideIn","then","save","CLOSED","slideOut","initRoomsListView","rooms_list_view","chatboxes","all","api","waitUntil","afterReconnection","listen"],"mappings":"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","file":"converse-roomslist.js","sourcesContent":["// Converse.js (A browser based XMPP chat client)\n// http://conversejs.org\n//\n// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>\n// Licensed under the Mozilla Public License (MPLv2)\n//\n/*global define */\n\n/* This is a non-core Converse.js plugin which shows a list of currently open\n * rooms in the \"Rooms Panel\" of the ControlBox.\n */\n(function (root, factory) {\n    define([\"utils\",\n            \"converse-core\",\n            \"converse-muc\",\n            \"tpl!rooms_list\",\n            \"tpl!rooms_list_item\"\n        ], factory);\n}(this, function (utils, converse, muc, tpl_rooms_list, tpl_rooms_list_item) {\n    const { Backbone, Promise, b64_sha1, sizzle, _ } = converse.env;\n\n    converse.plugins.add('converse-roomslist', {\n\n        /* Optional dependencies are other plugins which might be\n         * overridden or relied upon, and therefore need to be loaded before\n         * this plugin. They are called \"optional\" because they might not be\n         * available, in which case any overrides applicable to them will be\n         * ignored.\n         *\n         * It's possible however to make optional dependencies non-optional.\n         * If the setting \"strict_plugin_dependencies\" is set to true,\n         * an error will be raised if the plugin is not found.\n         *\n         * NB: These plugins need to have already been loaded via require.js.\n         */\n        optional_dependencies: [\"converse-bookmarks\"],\n\n        initialize () {\n            /* The initialize function gets called as soon as the plugin is\n             * loaded by converse.js's plugin machinery.\n             */\n            const { _converse } = this,\n                  { __, ___ } = _converse;\n\n            _converse.RoomsList = Backbone.Model.extend({\n                defaults: {\n                    \"toggle-state\":  _converse.OPENED\n                }\n            });\n\n            _converse.RoomsListView = Backbone.View.extend({\n                tagName: 'div',\n                className: 'open-rooms-list rooms-list-container',\n                events: {\n                    'click .add-bookmark': 'addBookmark',\n                    'click .close-room': 'closeRoom',\n                    'click .open-rooms-toggle': 'toggleRoomsList',\n                    'click .remove-bookmark': 'removeBookmark',\n                },\n\n                initialize () {\n                    this.toggleRoomsList = _.debounce(this.toggleRoomsList, 600, {'leading': true});\n\n                    this.model.on('add', this.renderRoomsListElement, this);\n                    this.model.on('change:bookmarked', this.renderRoomsListElement, this);\n                    this.model.on('change:name', this.renderRoomsListElement, this);\n                    this.model.on('change:num_unread', this.renderRoomsListElement, this);\n                    this.model.on('change:num_unread_general', this.renderRoomsListElement, this);\n                    this.model.on('remove', this.removeRoomsListElement, this);\n\n                    const cachekey = `converse.roomslist${_converse.bare_jid}`;\n                    this.list_model = new _converse.RoomsList();\n                    this.list_model.id = cachekey;\n                    this.list_model.browserStorage = new Backbone.BrowserStorage[_converse.storage](\n                        b64_sha1(cachekey)\n                    );\n                    this.list_model.fetch();\n                    this.render();\n                },\n\n                render () {\n                    this.el.innerHTML =\n                        tpl_rooms_list({\n                        'toggle_state': this.list_model.get('toggle-state'),\n                        'desc_rooms': __('Click to toggle the rooms list'),\n                        'label_rooms': __('Open Rooms')\n                    });\n                    this.hide();\n                    if (this.list_model.get('toggle-state') !== _converse.OPENED) {\n                        this.el.querySelector('.open-rooms-list').classList.add('collapsed');\n                    }\n                    this.model.each(this.renderRoomsListElement.bind(this));\n                    const controlboxview = _converse.chatboxviews.get('controlbox');\n\n                    if (!_.isUndefined(controlboxview) &&\n                            !document.body.contains(this.el)) {\n                        const container = controlboxview.el.querySelector('#chatrooms');\n                        if (!_.isNull(container)) {\n                            container.insertBefore(this.el, container.firstChild);\n                        }\n                    }\n                    return this.el;\n                },\n\n                hide () {\n                    this.el.classList.add('hidden');\n                },\n\n                show () {\n                    this.el.classList.remove('hidden');\n                },\n\n                closeRoom (ev) {\n                    ev.preventDefault();\n                    const name = ev.target.getAttribute('data-room-name');\n                    const jid = ev.target.getAttribute('data-room-jid');\n                    if (confirm(__(___(\"Are you sure you want to leave the room \\\"%1$s\\\"?\"), name))) {\n                        _converse.chatboxviews.get(jid).leave();\n                    }\n                },\n\n                renderRoomsListElement (item) {\n                    if (item.get('type') !== 'chatroom') {\n                        return;\n                    }\n                    this.removeRoomsListElement(item);\n\n                    let name, bookmark;\n                    if (item.get('bookmarked')) {\n                        bookmark = _.head(_converse.bookmarksview.model.where({'jid': item.get('jid')}));\n                        name = bookmark.get('name');\n                    } else {\n                        name = item.get('name');\n                    }\n                    const div = document.createElement('div');\n                    div.innerHTML = tpl_rooms_list_item(_.extend(item.toJSON(), {\n                        'allow_bookmarks': _converse.allow_bookmarks,\n                        'info_leave_room': __('Leave this room'),\n                        'info_remove_bookmark': __('Unbookmark this room'),\n                        'info_add_bookmark': __('Bookmark this room'),\n                        'info_title': __('Show more information on this room'),\n                        'name': name,\n                        'open_title': __('Click to open this room')\n                    }));\n                    this.el.querySelector('.open-rooms-list').appendChild(div.firstChild);\n                    this.show();\n                },\n\n                removeBookmark: _converse.removeBookmarkViaEvent,\n                addBookmark: _converse.addBookmarkViaEvent,\n\n                removeRoomsListElement (item) {\n                    const list_el = this.el.querySelector('.open-rooms-list');\n                    const el = _.head(sizzle(`.available-chatroom[data-room-jid=\"${item.get('jid')}\"]`, list_el));\n                    if (el) {\n                        list_el.removeChild(el);\n                    }\n                    if (list_el.childElementCount === 0) {\n                        this.hide();\n                    }\n                },\n\n                toggleRoomsList (ev) {\n                    if (ev && ev.preventDefault) { ev.preventDefault(); }\n                    const el = ev.target;\n                    if (el.classList.contains(\"icon-opened\")) {\n                        utils.slideIn(this.el.querySelector('.open-rooms-list')).then(() => {\n                            this.list_model.save({'toggle-state': _converse.CLOSED});\n                            el.classList.remove(\"icon-opened\");\n                            el.classList.add(\"icon-closed\");\n                        });\n                    } else {\n                        utils.slideOut(this.el.querySelector('.open-rooms-list')).then(() => {\n                            this.list_model.save({'toggle-state': _converse.OPENED});\n                            el.classList.remove(\"icon-closed\");\n                            el.classList.add(\"icon-opened\");\n                        });\n                    }\n                }\n            });\n\n            const initRoomsListView = function () {\n                _converse.rooms_list_view = new _converse.RoomsListView(\n                    {'model': _converse.chatboxes}\n                );\n            };\n\n            Promise.all([\n                _converse.api.waitUntil('chatBoxesFetched'),\n                _converse.api.waitUntil('roomsPanelRendered')\n            ]).then(() => {\n                if (_converse.allow_bookmarks) {\n                    _converse.api.waitUntil('bookmarksInitialized').then(\n                        initRoomsListView\n                    );\n                } else {\n                    initRoomsListView();\n                }\n            });\n\n            const afterReconnection = function () {\n                if (_.isUndefined(_converse.rooms_list_view)) {\n                    initRoomsListView();\n                } else {\n                    _converse.rooms_list_view.render();\n                }\n            };\n            _converse.api.listen.on('reconnected', afterReconnection);\n        }\n    });\n}));\n"]}